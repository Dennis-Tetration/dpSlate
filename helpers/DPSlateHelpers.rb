
module DPSlateHelpers
    
#
# build_toc - routine to build a static toc using HTML
# inputs
#   page_content - the HTML for the page as a single string
#   tocSelectors - string of comma values header tags that should be in the index, e.g., "h1,h2,h3"
# outputs
#   string that contains the HTML for the table of contents
#   
  def build_toc(page_content, tocSelectors)
    html_doc = Nokogiri::HTML::DocumentFragment.parse(page_content)     # parse the HTML generated by the Markdown
    tocContent = '<ul class="nav submenu-1" id="nav">'
    prevLevel = 0
    html_doc.css(tocSelectors).each do |header|                         # Loop through the required headers
      currLevel = header.name[1].to_i
      if prevLevel == 0
          prevLevel = currLevel
      end
      if prevLevel > currLevel
        for i in (currLevel..(prevLevel-1))
            tocContent += ' </ul></li>'
        end
      end
      if prevLevel == currLevel
          tocContent += ' </li>'
      end
      if prevLevel < currLevel
          tocContent += ' <ul class="toc-submenu-' + currLevel.to_s + ' nav">'
      end
      tocContent += ' <li class="toc-' + header.name + '"> <a href="#' + header.attribute('id') + '" class="toc-' + header.name + '"> ' + header.content + ' </a>'
      prevLevel = currLevel
    end
    tocContent += ' </ul>'
    return tocContent
  end  
    
#
# datestring() - routine to return the current time as a formatted date string
# input - none
# output
#   string that contains a formatted version of the current date and time of the system
#    
  def datestring()
    Time.now.strftime('%B %d, %Y at %H:%M %Z')
  end

#
# get_defaults() - routine to read the _default.yml files
# outputs
#   a ruby hash that contains the defaults for the page directives 
    
  def get_defaults () 
      noDefaults = {
          title: "",
          version: "",
          copyright: "",
          publisher: "",
          publisherAddress: "",
          comments: "",
          tableOfContents: true,
          tocAccordion: 1,
          rightPanel: true,
          leftPanel: true,
          documentSearch: true,
          languageTabs: [ { 'default' => 'Default' } ],
          tocSelectors: "h1,h2,h3",
          tocFooters: []
        }
      
      if File.exists? ('source/_defaults.yml')
        defaults = YAML.load_file('source/_defaults.yml')
      else
        defaults = {}
      end  
      return noDefaults.merge(defaults)
  end

end 